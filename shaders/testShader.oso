OpenShadingLanguage 1.00
# Compiled by oslc 1.7.4.pixar38bde12
# options: 
shader testShader
param	color	_colU	0 0 0		%read{53,53} %write{2147483647,-1}
param	color	_colV	0 0 0		%read{53,53} %write{2147483647,-1}
oparam	color	o_col	0 0 0		%read{2147483647,-1} %write{53,53}
global	point	P	%read{0,0} %write{2147483647,-1}
local	float	___311_recipExp	%read{15,23} %write{3,3}
local	float	___311_r	%read{14,23} %write{10,10}
local	float	___311_sum	%read{15,15} %write{14,14}
local	float	___311_period	%read{22,31} %write{21,21}
local	float	___311_elipses	%read{50,50} %write{37,37}
local	float	___311_mask	%read{52,52} %write{48,48}
local	point	eyeTransform	%read{4,40} %write{1,1}
local	float	blend	%read{53,53} %write{52,52}
const	float	$const1	1.65		%read{0,0} %write{2147483647,-1}
temp	point	$tmp1	%read{1,1} %write{0,0}
const	point	$const2	-0.15000001 -0.1 0		%read{1,1} %write{2147483647,-1}
const	float	$const3	0.0099999998		%read{25,26} %write{2147483647,-1}
const	float	$const4	0.2		%read{21,21} %write{2147483647,-1}
const	float	$const5	0.029999999		%read{22,34} %write{2147483647,-1}
const	int	$const6	1		%read{5,40} %write{2147483647,-1}
const	float	$const7	1		%read{3,50} %write{2147483647,-1}
const	float	$const9	3		%read{3,3} %write{2147483647,-1}
const	string	$const10	"eyezone"		%read{2,2} %write{2147483647,-1}
const	int	$const11	0		%read{4,38} %write{2147483647,-1}
temp	float	$tmp3	%read{7,7} %write{4,4}
temp	float	$tmp4	%read{8,8} %write{5,5}
const	string	$const12	"hypot"		%read{6,42} %write{2147483647,-1}
temp	float	$tmp5	%read{9,9} %write{7,7}
temp	float	$tmp6	%read{9,9} %write{8,8}
temp	float	$tmp7	%read{10,10} %write{9,9}
temp	float	$tmp8	%read{13,13} %write{11,11}
temp	float	$tmp9	%read{13,13} %write{12,12}
temp	float	$tmp10	%read{14,14} %write{13,13}
temp	float	$tmp11	%read{21,21} %write{20,20}
temp	float	$tmp12	%read{19,19} %write{15,15}
const	string	$const13	"lerp"		%read{16,16} %write{2147483647,-1}
temp	float	$tmp13	%read{18,18} %write{17,17}
temp	float	$tmp14	%read{20,20} %write{18,18}
temp	float	$tmp15	%read{20,20} %write{19,19}
temp	float	$tmp16	%read{37,37} %write{36,36}
temp	float	$tmp17	%read{26,35} %write{22,22}
temp	float	$tmp18	%read{29,32} %write{23,23}
const	string	$const14	"smoothpulsetraineven"		%read{24,24} %write{2147483647,-1}
temp	float	$tmp19	%read{34,34} %write{25,25}
temp	float	$tmp20	%read{35,35} %write{26,26}
const	string	$const15	"smoothpulsetrain"		%read{27,27} %write{2147483647,-1}
temp	float	$tmp21	%read{34,35} %write{32,32}
const	string	$const16	"mod"		%read{28,28} %write{2147483647,-1}
temp	float	$tmp22	%read{31,31} %write{30,30}
temp	float	$tmp23	%read{30,30} %write{29,29}
temp	float	$tmp24	%read{32,32} %write{31,31}
const	string	$const17	"smoothpulse"		%read{33,33} %write{2147483647,-1}
temp	float	$tmp25	%read{36,36} %write{34,34}
temp	float	$tmp26	%read{36,36} %write{35,35}
temp	float	$tmp27	%read{48,48} %write{47,47}
temp	float	$tmp28	%read{47,47} %write{46,46}
temp	float	$tmp29	%read{39,39} %write{38,38}
const	float	$const18	0.69999999		%read{39,41} %write{2147483647,-1}
temp	float	$tmp30	%read{43,43} %write{39,39}
temp	float	$tmp31	%read{41,41} %write{40,40}
temp	float	$tmp32	%read{44,44} %write{41,41}
temp	float	$tmp33	%read{45,45} %write{43,43}
temp	float	$tmp34	%read{45,45} %write{44,44}
temp	float	$tmp35	%read{46,46} %write{45,45}
temp	float	$tmp36	%read{52,52} %write{51,51}
const	float	$const19	0		%read{51,51} %write{2147483647,-1}
const	string	$const20	"clamp"		%read{49,49} %write{2147483647,-1}
temp	float	$tmp37	%read{51,51} %write{50,50}
code ___main___
# testShader.osl:58
#     point eyeTransform = P /1.65 + point(-0.15,-0.1,0);
	div		$tmp1 P $const1 	%filename{"testShader.osl"} %line{58} %argrw{"wrr"}
	add		eyeTransform $tmp1 $const2 	%argrw{"wrr"}
# testShader.osl:59
#     float blend = eyezone(eyeTransform, 0.01, 0.2, 0.03, 1, 3);
	functioncall	$const10 53 	%line{59} %argrw{"r"}
# testShader.osl:40
#     float recipExp = 1.0/exp;
	div		___311_recipExp $const7 $const9 	%line{40} %argrw{"wrr"}
# testShader.osl:42
#     float r = hypot(pos[0],pos[1]);
	compref		$tmp3 eyeTransform $const11 	%line{42} %argrw{"wrr"}
	compref		$tmp4 eyeTransform $const6 	%argrw{"wrr"}
	functioncall	$const12 11 	%argrw{"r"}
# /opt/pixar/RenderManProServer-21.4/lib/osl/include/stdosl.h:113
#     normal name (normal x, float y) BUILTIN;    \
	mul		$tmp5 $tmp3 $tmp3 	%filename{"/opt/pixar/RenderManProServer-21.4/lib/osl/include/stdosl.h"} %line{113} %argrw{"wrr"}
	mul		$tmp6 $tmp4 $tmp4 	%argrw{"wrr"}
	add		$tmp7 $tmp5 $tmp6 	%argrw{"wrr"}
	sqrt		___311_r $tmp7 	%argrw{"wr"}
# testShader.osl:44
#     float sum = (pos[0] + pos[1]) / r;
	compref		$tmp8 eyeTransform $const11 	%filename{"testShader.osl"} %line{44} %argrw{"wrr"}
	compref		$tmp9 eyeTransform $const6 	%argrw{"wrr"}
	add		$tmp10 $tmp8 $tmp9 	%argrw{"wrr"}
	div		___311_sum $tmp10 ___311_r 	%argrw{"wrr"}
# testShader.osl:46
#     float period = gap * lerp(1, pow(sum,recipExp), warp);
	pow		$tmp12 ___311_sum ___311_recipExp 	%line{46} %argrw{"wrr"}
	functioncall	$const13 21 	%argrw{"r"}
# testShader.osl:17
#   return (1 - t) * x + t * y;
	sub		$tmp13 $const7 $const7 	%line{17} %argrw{"wrr"}
	mul		$tmp14 $tmp13 $const7 	%argrw{"wrr"}
	mul		$tmp15 $const7 $tmp12 	%argrw{"wrr"}
	add		$tmp11 $tmp14 $tmp15 	%argrw{"wrr"}
# testShader.osl:46
#     float period = gap * lerp(1, pow(sum,recipExp), warp);
	mul		___311_period $const4 $tmp11 	%line{46} %argrw{"wrr"}
# testShader.osl:47
#     float elipses = 1 - smoothpulsetraineven(thickness, thickness + period, fuzz, period, pow(r,recipExp));
	add		$tmp17 $const5 ___311_period 	%line{47} %argrw{"wrr"}
	pow		$tmp18 ___311_r ___311_recipExp 	%argrw{"wrr"}
	functioncall	$const14 37 	%argrw{"r"}
# testShader.osl:35
#     return smoothpulsetrain(e0-fuzz, e0, e1, e1+fuzz, period,x);
	sub		$tmp19 $const5 $const3 	%line{35} %argrw{"wrr"}
	add		$tmp20 $tmp17 $const3 	%argrw{"wrr"}
	functioncall	$const15 37 	%argrw{"r"}
# testShader.osl:29
#     return smoothpulse(e0, e1, e2, e3, mod(x,period));
	functioncall	$const16 33 	%line{29} %argrw{"r"}
# /opt/pixar/RenderManProServer-21.4/lib/osl/include/stdosl.h:135
# color  log (color a,  float b) { return log(a)/log(b); }
	div		$tmp23 $tmp18 ___311_period 	%filename{"/opt/pixar/RenderManProServer-21.4/lib/osl/include/stdosl.h"} %line{135} %argrw{"wrr"}
	floor		$tmp22 $tmp23 	%argrw{"wr"}
	mul		$tmp24 ___311_period $tmp22 	%argrw{"wrr"}
	sub		$tmp21 $tmp18 $tmp24 	%argrw{"wrr"}
# testShader.osl:29
#     return smoothpulse(e0, e1, e2, e3, mod(x,period));
	functioncall	$const17 37 	%filename{"testShader.osl"} %line{29} %argrw{"r"}
# testShader.osl:23
#     return smoothstep(e0,e1,x) - smoothstep(e2,e3,x);
	smoothstep	$tmp25 $tmp19 $const5 $tmp21 	%line{23} %argrw{"wrrr"}
	smoothstep	$tmp26 $tmp17 $tmp20 $tmp21 	%argrw{"wrrr"}
	sub		$tmp16 $tmp25 $tmp26 	%argrw{"wrr"}
# testShader.osl:47
#     float elipses = 1 - smoothpulsetraineven(thickness, thickness + period, fuzz, period, pow(r,recipExp));
	sub		___311_elipses $const7 $tmp16 	%line{47} %argrw{"wrr"}
# testShader.osl:48
#     float mask = 1 - smoothstep(1,1,hypot(pos[0]-(0.7),pos[1]-(0.7)));
	compref		$tmp29 eyeTransform $const11 	%line{48} %argrw{"wrr"}
	sub		$tmp30 $tmp29 $const18 	%argrw{"wrr"}
	compref		$tmp31 eyeTransform $const6 	%argrw{"wrr"}
	sub		$tmp32 $tmp31 $const18 	%argrw{"wrr"}
	functioncall	$const12 47 	%argrw{"r"}
# /opt/pixar/RenderManProServer-21.4/lib/osl/include/stdosl.h:113
#     vector name (vector x, vector y) BUILTIN;   \
	mul		$tmp33 $tmp30 $tmp30 	%filename{"/opt/pixar/RenderManProServer-21.4/lib/osl/include/stdosl.h"} %line{113} %argrw{"wrr"}
	mul		$tmp34 $tmp32 $tmp32 	%argrw{"wrr"}
	add		$tmp35 $tmp33 $tmp34 	%argrw{"wrr"}
	sqrt		$tmp28 $tmp35 	%argrw{"wr"}
# testShader.osl:48
#     float mask = 1 - smoothstep(1,1,hypot(pos[0]-(0.7),pos[1]-(0.7)));
	smoothstep	$tmp27 $const7 $const7 $tmp28 	%filename{"testShader.osl"} %line{48} %argrw{"wrrr"}
	sub		___311_mask $const7 $tmp27 	%argrw{"wrr"}
# testShader.osl:49
#     return mask * clamp(elipses,0,1);
	functioncall	$const20 52 	%line{49} %argrw{"r"}
# /opt/pixar/RenderManProServer-21.4/lib/osl/include/stdosl.h:144
# PERCOMP2 (atan2)
	min		$tmp37 ___311_elipses $const7 	%filename{"/opt/pixar/RenderManProServer-21.4/lib/osl/include/stdosl.h"} %line{144} %argrw{"wrr"}
	max		$tmp36 $tmp37 $const19 	%argrw{"wrr"}
# testShader.osl:49
#     return mask * clamp(elipses,0,1);
	mul		blend ___311_mask $tmp36 	%filename{"testShader.osl"} %line{49} %argrw{"wrr"}
# testShader.osl:60
#     o_col = mix(_colU, _colV, blend);
	mix		o_col _colU _colV blend 	%line{60} %argrw{"wrrr"}
	end
